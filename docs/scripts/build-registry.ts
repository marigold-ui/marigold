// @ts-nocheck
import fs from 'fs';
import path from 'path';
import { registry } from '../registry/registry.js';
import { registrySchema } from '../registry/schema.js';

const result = registrySchema.safeParse(registry);

if (!result.success) {
  console.error(result.error);
  process.exit(1);
}

let index = `// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import dynamic from 'next/dynamic';

export const Index: Record<string, any> = {
`;

console.log('huhu', result);

for (const item of result.data) {
  index += `
    "${item.name}": {
      name: "${item.name}",
      demo: dynamic(
        () => import('@/content/components/button/${item.name}.demo')
      ),
      file: "${item.file}",
    },`;
}
index += `
}`;

console.log(index);

fs.writeFileSync(path.join(process.cwd(), '__registry__/index.tsx'), index);
