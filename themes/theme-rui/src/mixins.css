/*
  File: tailwind-components.css

  Description
  -----------
  This file defines custom Tailwind CSS component classes by bundling commonly used utility classes
  with the @apply directive. The goal is to reduce duplication, enhance maintainability, and ensure
  a consistent styling pattern across various components.

  Usage
  -----
  Import this file into your main stylesheet or reference it in your Tailwind CSS configuration.

  Best Practices
  --------------
  - Encapsulate frequently used utility combinations into custom classes for better reusability.
  - Update the definitions here to maintain consistency in our design system across all components.
  - Keep custom classes focused on specific styling concerns to preserve clarity.
*/

@layer components {
  /*==============*/
  /*     Focus    */
  /*==============*/
  .mixin-ring-focus-visible {
    @apply focus-visible:border-ring focus-visible:ring-ring/50 outline-none focus-visible:ring-[3px];
  }

  .mixin-ring-has-focus-visible {
    @apply has-focus-visible:border-border has-focus-visible:ring-ring/50 has-focus-visible:ring-[3px];
  }

  /* TODO: rename the groups to something common? e.g. "control" or something */
  .mixin-ring-focus-visible-checkbox {
    @apply group-focus-visible/checkbox:ring-ring/50 group-focus-visible/checkbox:ring-[3px];
  }
  .mixin-ring-focus-visible-radio {
    @apply group-focus-visible/radio:ring-ring/50 group-focus-visible/radio:ring-[3px];
  }

  .mixin-ring-focus-visible-borderless {
    @apply focus-visible:ring-ring/50 outline-none focus-visible:ring-[3px];
  }

  /*==============*/
  /*   Disabled   */
  /*==============*/
  .mixin-disabled {
    @apply disabled:bg-disabled disabled:text-disabled-foreground disabled:pointer-events-none disabled:cursor-not-allowed disabled:border-none;
  }
}
